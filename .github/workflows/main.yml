name: Spring Boot CI/CD

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发工作流

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 设置 Java 17 环境
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. 构建 Spring Boot 项目
      - name: Build with Maven
        run: mvn clean package

      # 4. 设置 SSH Key 并上传文件
      - name: Set up SSH Key and deploy
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          # 确保私钥文件已正确写入
          cat key.pem
          # 确保设置权限为 600
          chmod 600 key.pem
          # 列出当前目录的文件，确认 key.pem 存在
          ls -la
          # 使用 SCP 上传 JAR 文件到 EC2 实例
          scp -o StrictHostKeyChecking=no -i key.pem target/demo-1.0-SNAPSHOT.jar ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # 1. 连接到 EC2 实例并启动 Spring Boot 应用
      - name: SSH to EC2 and run Spring Boot
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.EC2_HOST }} "pkill -f 'java -jar' || true && nohup java -jar /home/ec2-user/demo-1.0-SNAPSHOT.jar > app.log 2>&1 &"
